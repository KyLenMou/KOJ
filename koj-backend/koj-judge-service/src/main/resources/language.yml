---
language: C
src_path: main.c
exe_path: main
compile:
  env: default
  command: /usr/bin/gcc -DONLINE_JUDGE -O2 -w -fmax-errors=1 -std=c11 {src_path} -lm -o {exe_path}
  maxCpuTime: 5s
  maxRealTime: 10s
  maxMemory: 256mb
run:
  env: default
  command: /w/{exe_path}

---
language: C++
src_path: main.cpp
exe_path: main
compile:
  env: default
  command: /usr/bin/g++ -DONLINE_JUDGE -O2 -w -fmax-errors=1 -std=c++17 {src_path} -lm -o {exe_path}
  maxCpuTime: 10s
  maxRealTime: 20s
  maxMemory: 512mb
run:
  env: default
  command: /w/{exe_path}

---
language: Java
src_path: Main.java
exe_path: Main.jar
compile:
  env: default
  command: /bin/bash -c "javac -encoding utf-8 {src_path} && jar -cvf {exe_path} *.class"
  maxCpuTime: 10s
  maxRealTime: 20s
  maxMemory: 512mb
run:
  env: default
  command: /usr/bin/java -Dfile.encoding=UTF-8 -cp /w/{exe_path} Main

---
language: Python
src_path: main.py
exe_path: __pycache__/main.pypy39.pyc
compile:
  env: python3
  command: /usr/bin/pypy3 -m py_compile /w/{src_path}
  maxCpuTime: 5s
  maxRealTime: 10s
  maxMemory: 256mb
run:
  env: python3
  command: /usr/bin/pypy3 /w/{exe_path}


---
language: Golang
src_path: main.go
exe_path: main
compile:
  env: golang_compile
  command: /usr/bin/go build -o {exe_path} {src_path}
  maxCpuTime: 5s
  maxRealTime: 10s
  maxMemory: 512mb
run:
  env: golang_run
  command: /w/{exe_path}

# 以下为特殊评测或交互评测使用的语言
---
language: SPJ-C++
src_path: spj.cpp
exe_path: spj
compile:
  env: default
  command: /usr/bin/g++ -DONLINE_JUDGE -O2 -w -fmax-errors=3 -std=c++14 {src_path} -lm -o {exe_path}
  maxCpuTime: 15s
  maxRealTime: 30s
  maxMemory: 512mb
run:
  env: default
  command: /w/{exe_path} {std_input} {user_output} {std_output}

---
language: INTERACTIVE-C++
src_path: interactive.cpp
exe_path: interactive
compile:
  env: default
  command: /usr/bin/g++ -DONLINE_JUDGE -O2 -w -fmax-errors=3 -std=c++14 {src_path} -lm -o {exe_path}
  maxCpuTime: 15s
  maxRealTime: 30s
  maxMemory: 512mb
run:
  env: default
  command: /w/{exe_path} {std_input} {user_output} {std_output}
